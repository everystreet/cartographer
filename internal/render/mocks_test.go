// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/everystreet/cartographer/internal/render (interfaces: Tile,RectangleDrawer,BackgroundDrawer)

// Package render_test is a generated GoMock package.
package render_test

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTile is a mock of Tile interface
type MockTile struct {
	ctrl     *gomock.Controller
	recorder *MockTileMockRecorder
}

// MockTileMockRecorder is the mock recorder for MockTile
type MockTileMockRecorder struct {
	mock *MockTile
}

// NewMockTile creates a new mock instance
func NewMockTile(ctrl *gomock.Controller) *MockTile {
	mock := &MockTile{ctrl: ctrl}
	mock.recorder = &MockTileMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTile) EXPECT() *MockTileMockRecorder {
	return m.recorder
}

// Height mocks base method
func (m *MockTile) Height() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Height")
	ret0, _ := ret[0].(int)
	return ret0
}

// Height indicates an expected call of Height
func (mr *MockTileMockRecorder) Height() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Height", reflect.TypeOf((*MockTile)(nil).Height))
}

// Width mocks base method
func (m *MockTile) Width() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Width")
	ret0, _ := ret[0].(int)
	return ret0
}

// Width indicates an expected call of Width
func (mr *MockTileMockRecorder) Width() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Width", reflect.TypeOf((*MockTile)(nil).Width))
}

// MockRectangleDrawer is a mock of RectangleDrawer interface
type MockRectangleDrawer struct {
	ctrl     *gomock.Controller
	recorder *MockRectangleDrawerMockRecorder
}

// MockRectangleDrawerMockRecorder is the mock recorder for MockRectangleDrawer
type MockRectangleDrawerMockRecorder struct {
	mock *MockRectangleDrawer
}

// NewMockRectangleDrawer creates a new mock instance
func NewMockRectangleDrawer(ctrl *gomock.Controller) *MockRectangleDrawer {
	mock := &MockRectangleDrawer{ctrl: ctrl}
	mock.recorder = &MockRectangleDrawerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRectangleDrawer) EXPECT() *MockRectangleDrawerMockRecorder {
	return m.recorder
}

// DrawRectangle mocks base method
func (m *MockRectangleDrawer) DrawRectangle(arg0, arg1, arg2, arg3 float64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DrawRectangle", arg0, arg1, arg2, arg3)
}

// DrawRectangle indicates an expected call of DrawRectangle
func (mr *MockRectangleDrawerMockRecorder) DrawRectangle(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DrawRectangle", reflect.TypeOf((*MockRectangleDrawer)(nil).DrawRectangle), arg0, arg1, arg2, arg3)
}

// Fill mocks base method
func (m *MockRectangleDrawer) Fill() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Fill")
}

// Fill indicates an expected call of Fill
func (mr *MockRectangleDrawerMockRecorder) Fill() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fill", reflect.TypeOf((*MockRectangleDrawer)(nil).Fill))
}

// SetRGBA255 mocks base method
func (m *MockRectangleDrawer) SetRGBA255(arg0, arg1, arg2, arg3 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetRGBA255", arg0, arg1, arg2, arg3)
}

// SetRGBA255 indicates an expected call of SetRGBA255
func (mr *MockRectangleDrawerMockRecorder) SetRGBA255(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetRGBA255", reflect.TypeOf((*MockRectangleDrawer)(nil).SetRGBA255), arg0, arg1, arg2, arg3)
}

// MockBackgroundDrawer is a mock of BackgroundDrawer interface
type MockBackgroundDrawer struct {
	ctrl     *gomock.Controller
	recorder *MockBackgroundDrawerMockRecorder
}

// MockBackgroundDrawerMockRecorder is the mock recorder for MockBackgroundDrawer
type MockBackgroundDrawerMockRecorder struct {
	mock *MockBackgroundDrawer
}

// NewMockBackgroundDrawer creates a new mock instance
func NewMockBackgroundDrawer(ctrl *gomock.Controller) *MockBackgroundDrawer {
	mock := &MockBackgroundDrawer{ctrl: ctrl}
	mock.recorder = &MockBackgroundDrawerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBackgroundDrawer) EXPECT() *MockBackgroundDrawerMockRecorder {
	return m.recorder
}

// DrawRectangle mocks base method
func (m *MockBackgroundDrawer) DrawRectangle(arg0, arg1, arg2, arg3 float64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DrawRectangle", arg0, arg1, arg2, arg3)
}

// DrawRectangle indicates an expected call of DrawRectangle
func (mr *MockBackgroundDrawerMockRecorder) DrawRectangle(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DrawRectangle", reflect.TypeOf((*MockBackgroundDrawer)(nil).DrawRectangle), arg0, arg1, arg2, arg3)
}

// Fill mocks base method
func (m *MockBackgroundDrawer) Fill() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Fill")
}

// Fill indicates an expected call of Fill
func (mr *MockBackgroundDrawerMockRecorder) Fill() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fill", reflect.TypeOf((*MockBackgroundDrawer)(nil).Fill))
}

// Height mocks base method
func (m *MockBackgroundDrawer) Height() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Height")
	ret0, _ := ret[0].(int)
	return ret0
}

// Height indicates an expected call of Height
func (mr *MockBackgroundDrawerMockRecorder) Height() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Height", reflect.TypeOf((*MockBackgroundDrawer)(nil).Height))
}

// SetRGBA255 mocks base method
func (m *MockBackgroundDrawer) SetRGBA255(arg0, arg1, arg2, arg3 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetRGBA255", arg0, arg1, arg2, arg3)
}

// SetRGBA255 indicates an expected call of SetRGBA255
func (mr *MockBackgroundDrawerMockRecorder) SetRGBA255(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetRGBA255", reflect.TypeOf((*MockBackgroundDrawer)(nil).SetRGBA255), arg0, arg1, arg2, arg3)
}

// Width mocks base method
func (m *MockBackgroundDrawer) Width() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Width")
	ret0, _ := ret[0].(int)
	return ret0
}

// Width indicates an expected call of Width
func (mr *MockBackgroundDrawerMockRecorder) Width() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Width", reflect.TypeOf((*MockBackgroundDrawer)(nil).Width))
}
